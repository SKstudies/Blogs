trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '008da5e6-76b5-4e55-b1f5-d6923fccfadc'
  imageRepository: 'skstudiesblogs'
  containerRegistry: 'cicdk8s.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'cicdk8s86968314-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests

- stage: CreateSecrets
  displayName: 'Create Kubernetes Secrets'
  jobs:
  - job: CreateSecrets
    displayName: 'Create Secrets'
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        kubectl create secret generic mongodb-secret --from-literal=MONGODB_URI=$(MONGODB_URI)
        kubectl create secret generic jwt-secret --from-literal=JWT_SECRET=$(JWT_SECRET)
      displayName: 'Create Kubernetes Secrets'
    dependsOn: Build

- stage: Deploy
  displayName: Deploy stage
  dependsOn: 
  - Build
  - CreateSecrets  # Add this line to make the Deploy stage depend on CreateSecrets
  jobs:
    - deployment: Deploy
      displayName: Deploy
      pool:
        vmImage: $(vmImageName)
      environment: 'SKstudiesBlogs-9026.default'
      strategy:
        runOnce:
          deploy:
            steps:
            - task: KubernetesManifest@0
              displayName: Create imagePullSecret
              inputs:
                action: createSecret
                secretName: $(imagePullSecret)
                dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

            - task: KubernetesManifest@0
              displayName: Deploy to Kubernetes cluster
              inputs:
                action: deploy
                manifests: |
                  $(Pipeline.Workspace)/manifests/blog-app-deployment.yaml
                  $(Pipeline.Workspace)/manifests/blog-app-service.yaml
                imagePullSecrets: |
                  $(imagePullSecret)
                containers: |
                  $(containerRegistry)/$(imageRepository):$(tag)
